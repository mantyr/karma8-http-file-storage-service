syntax = "proto3";

package karma8.discovery.servers.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "karma8-discovery/servers/server.proto";
import "karma8-discovery/subjects/subject.proto";

option go_package = "github.com/mantyr/karma8-http-file-storage-service/api/karma8-discovery/servers";

service ServerService {
  // Add добавляет информацию о новом сервере хранения файлов
  rpc Add(AddRequest) returns (AddResponse) {
    option (google.api.http) = {
      post: "/api/v1/servers"
      body: "*"
    };
  }
  // SetStoredDataSize устанавливает значение количества сохранённых данных на сервере
  rpc SetStoredDataSize(SetStoredDataSizeRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/api/v1/servers/{server_id}/stored-data-size"
    };
  }
  // List возвращает список всех зарегистрированных серверов
  rpc List(ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      get: "/api/v1/servers"
    };
  }
  // Get возвращает информацию о сервере
  rpc Get(GetRequest) returns (GetResponse) {
    option (google.api.http) = {
      get: "/api/v1/servers/{server_id}"
    };
  }
}

// AddRequest это запрос на добавление информации о новом сервере хранения файлов
message AddRequest {
  // ServerID это идентификатор сервера
  string server_id = 1;

  // Host это адрес по которому отвечает сервер
  string host = 2;

  // Port это порт по которому отвечает сервер
  int32 port = 3;

  // Creator это информация о субъекте который создал запись
  karma8.discovery.subjects.v1.Subject creator = 4;
}

// AddResponse это ответ на запрос на добавление информации о новом сервере
message AddResponse {}

// SetStoredDataSizeRequest это запрос на установку размера данных которые храняться на сервере
message SetStoredDataSizeRequest {
  // ServerID это идентификатор сервера
  string server_id = 1;

  // StoredDataSize это размер данных которые хранятся на сервере
  int64 stored_data_size = 2; 
}

// ListRequest это запрос всех зарегистрированных серверов
message ListRequest {}

// ListResponse это ответ на запрос всех зарегистрированных серверов
message ListResponse {
  // Servers это перечень серверов хранения файлов
  repeated Server servers = 1;
}

// GetRequest это запрос на получение информации о сервере
message GetRequest {
  // ServerID это идентификатор сервера
  string server_id = 1;
}

// GerResponse это ответ на запрос на получение информации о сервере
message GetResponse {
  // Server это информация о сервере
  Server server = 1;
}
